/*-- components/button --*/
.button {
  position:         relative;
  display:          inline-block;
  color:            $button-fore;
  font-size:        $button-size;
  line-height:      $button-line;
  margin:           $button-margin;
  padding:          $button-padding;
  border:           $button-border-width solid $button-border-color;
  border-radius:    $button-radius;
  text-align:       center;
  text-decoration:  none;
  vertical-align:   middle;
  outline:          none;
  cursor:           pointer;
  touch-action:     manipulation;
  background-image: none;
  white-space:      nowrap;
  user-select:      none;
  transition:       0.3s all;
  background-color: rgba($button-back-color, $button-back-opacity);
  &:hover {
    background-color: mix($button-color, $button-hover-back-mixer, $button-hover-back-mix);
    color: mix($button-color, $button-hover-text-mixer, $button-hover-text-mix);
    text-decoration: none;
  }
  &:focus, &.focus {
    border-color: $button-focus-border-color;
    background-color: mix($button-color, $button-focus-back-mixer, $button-focus-back-mix);
    color: mix($button-color, $button-focus-text-mixer, $button-focus-text-mix);
    @include outline(rgba($button-color, $button-focus-outline-opacity), $button-focus-outline-width);
  }
  &.solid, &.shade, &.gradient {
    background-color: darkish-color($button-color);
    border-color:     transparent;
    color:            rgba($white,0.95);
    text-shadow:      1px 1px 1px rgba(black, $button-text-shadow);
    &:focus, &.focus {
      border-color: $button-focus-border-color;
    }
    .icon {
      filter: drop-shadow(1px 1px 1px rgba(black, $button-text-shadow));
    }
  }
  &.shade {
    background: linear-gradient(
      $button-shade-angle,
      lighten($button-color, $button-shade-lighten),
      darken($button-color, $button-shade-darken)
    );
    &:hover, &:focus, &.focus {
      background: linear-gradient(
        $button-shade-angle,
        lighten($button-color, $button-shade-lighten - $button-shade-hover),
        darken($button-color, $button-shade-darken + $button-shade-hover)
      );
    }
    &:focus, &.focus {
      background: linear-gradient(
        $button-shade-angle,
        darken($button-color, $button-shade-darken),
        lighten($button-color, $button-shade-lighten)
      );
    }
  }
  &.compact {
    line-height: 100%;
  }
  &:last-child {
    margin-right: 0;
  }
  .icon {
    margin: 0;
  }
  .icon.on-left {
    margin-left: 0;
  }
  .icon.on-right {
    margin-right: 0;
  }
  &.spread {
    display: flex;
    align-items: center;
    .caption {
      flex-grow: 1;
    }
  }
  &:active,
  &.active {
      outline: 0;
      background-image: none;
  }
  &.disabled,
  &[disabled],
  .disabled & {
      cursor: not-allowed;
      pointer-events: none;
      opacity: 0.5;
      box-shadow: none;
      &:hover {
        background-color: $button-invalid-back;
        border-color: $button-invalid-edge;
        cursor: not-allowed;
        &, .icon {
          color: $button-invalid-fore;
        }
      }
  }
  &.round,
  &.rounded {
    //padding-left: $button-pad-h * 1.5;
    //padding-right: $button-pad-h * 1.5;
    border-radius: 2em;
  }
  &.rounded.empty {
    padding: 0.5em 0.6em;
  }
}

@each $name, $col in $colors {
  .button.#{"" + $name} {
    color:        $col;
    border-color: $col;
    &:hover {
      background-color: mix($col, $button-hover-back-mixer, $button-hover-back-mix);
      color: mix($col, $button-hover-text-mixer, $button-hover-text-mix);
    }
    &:focus, &.focus {
      background-color: mix($col, $button-focus-back-mixer, $button-focus-back-mix);
      color: mix($col, $button-focus-text-mixer, $button-focus-text-mix);
      border-color: $button-focus-border-color;
      @include outline(rgba($col, $button-focus-outline-opacity), $button-focus-outline-width);
    }
  }
  .solid.button.#{"" + $name},
  .shade.button.#{"" + $name},
  .gradient.button.#{"" + $name} {
    background-color: darkish-color($col);
    background-color: $col;
    border-color:     mix($zero, $col, $button-solid-border-darken);
    color:            $white;
    &:hover {
      background-color: mix($zero, $col, $button-solid-hover-darken);
      border-color:     darken($col, 5%);
      color: $white;
    }
    &:focus, &.focus {
      background-color: mix($zero, $col, $button-solid-focus-darken);
      border-color:     mix($white, $col, 90%);
      color: $white;
      @include outline(rgba($col, $button-focus-outline-opacity), $button-focus-outline-width);
    }
    // &.yellow, &.olive {
      // color: $black;
      // text-shadow: none;
    // }
  }
  .shade.button.#{"" + $name} {
    background: linear-gradient(
      $button-shade-angle,
      lighten($col, $button-shade-lighten),
      darken($col, $button-shade-darken)
    );
    &:hover, &:focus, &.focus {
      background: linear-gradient(
        $button-shade-angle,
        lighten($col, $button-shade-lighten - $button-shade-hover),
        darken($col, $button-shade-darken + $button-shade-hover)
      );
    }
    &:focus, &.focus {
      background: linear-gradient(
        $button-shade-angle,
        darken($col, $button-shade-darken),
        lighten($col, $button-shade-lighten)
      );
    }
  }
  .gradient.button.#{"" + $name} {
    background: linear-gradient(
      $button-gradient-angle,
      $col,
      adjust-hue($col, $button-gradient-hue-shift)
    );
    &:hover {
      background: linear-gradient(
        $button-gradient-angle,
        mix($zero, $col, $button-solid-hover-darken),
        mix($zero,
          adjust-hue($col, $button-gradient-hue-shift),
          $button-solid-hover-darken
        )
      );
    }
    &:focus, &.focus {
      background: linear-gradient(
        $button-gradient-angle,
        mix($zero, $col, $button-solid-focus-darken),
        mix($zero,
          adjust-hue($col, $button-gradient-hue-shift),
          $button-solid-focus-darken
        )
      );
    }
  }
  .buttons .button.#{"" + $name}:focus {
    border-color: $col;
  }
}
.button.dark-text {
  color: rgba($black,0.75);
  &:hover, &:focus, &.focus {
    color: $black;
  }
}
.button.light-grey,
.button.light-grey.solid,
.button.white,
.button.white.solid {
  color: rgba($black, 0.7);
  border: 1px solid rgba($black, 0.1);
  &:hover, &:focus, &.focus {
    color: rgba($black, 0.9);
  }
}
.button.dark {
  background-color: rgba($black,0.3);
  color: rgba($white,0.7);
  border-color: rgba($black,0.5);
  &:hover {
    background-color: rgba($black,0.5);
    color: rgba($white,0.9);
    border-color: rgba($black,0.9);
  }
}
.button.clear {
    margin-left: 0;
}
.buttons {
  display: inline-flex;
  flex-direction: row;
  font-size: 1em;
  align-items: center;
  margin: 0 0 0.5em 0;
  .button {
    flex: 1 0 auto;
    margin-right: $buttons-gap;
    margin-bottom: 0;
    border-radius: 0 0 0 0;
    padding-left: 1em;
    padding-right: 1em;
    &:first-child {
      margin-left: 0;
      border-radius: $button-radius 0 0 $button-radius;
      border-right-color: $buttons-joint !important;
      &.round,
      &.rounded {
        padding-left: 1em;
        border-radius: 2em 0 0 2em;
      }
    }
    &:last-child {
      border-radius: 0 $button-radius $button-radius 0;
      border-left-color: $buttons-joint !important;
      margin-left: 0;
      margin-right: 0;
      &.round,
      &.rounded {
        padding-right: 1em;
        border-radius: 0 2em 2em 0;
      }
    }
    &:focus {
      box-shadow: none !important;
      z-index: 1;
    }
    &:focus.solid,
    &:focus.shade,
    &:focus.gradient {
      border-color: transparent !important;
    }
    &.solid:focus {
      z-index: 1;
    }
  }
}
